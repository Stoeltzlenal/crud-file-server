{"ts":1347500015189,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var fs = require('fs');\nvar error = require('./errorHandler.js');\nvar urlCleaner = require('./urlCleaner.js');\n\nexports.hahandleRequest = function(req, res, options, relativePath, query, url) {\n\tif(query.rename) { // rename a file or directory\n\t\tconsole.log('rename: ' + relativePath);\n\t\t// e.g., http://localhost/old-name.html?rename=new-name.html\n\t\tquery.rename = urlCleaner.cleanUrl(query.rename);\n\t\t// TODO: handle missing vpath here\n\t\tif(options.vpath) { \n\t\t\tif(query.rename.indexOf('/' + options.vpath + '/') === 0) { \n\t\t\t\tquery.rename = query.rename.slice(options.vpath.length + 2, query.rename.length);\n\t\t\t} else {\n\t\t\t\tthrow 'renamed url [' + query.rename + '] does not begin with vpath [' + options.vpath + ']';\n\t\t\t}\n\t\t} \n\t\tconsole.log('renaming ' + relativePath + ' to ' + options.path + query.rename);\n\t\tfs.rename(relativePath, options.path + query.rename, function(err) {\n\t\t\tif(err) { error.write(res, err); } \n\t\t\telse {\n\t\t\t\tres.end();\n\t\t\t}\n\t\t});\n\t} else if(query.create == 'directory') { // rename a directory\n\t\t// e.g., http://localhost/new-directory?create=directory\n\t\tconsole.log('creating directory ' + relativePath);\n\t\tfs.mkdir(relativePath, 777, function(err) { \n\t\t\tif(err) { error.write(res, err); } \n\t\t\telse {\n\t\t\t\tres.end();\n\t\t\t}\n\t\t});\n\t} else {\n\t\tconsole.log('relativePath: ' + relativePath);\n\t\terror.write(res, 'valid queries are ' + url + '?rename=[new name] or ' + url + '?create=directory');\n\t}\n\n};"]],"start1":0,"start2":0,"length1":0,"length2":1424}]],"length":1424}
