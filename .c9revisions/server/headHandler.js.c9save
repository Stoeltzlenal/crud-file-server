{"ts":1347500013218,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var fs = require('fs');\nvar error = require('./error.js');\nvar mime = require('mime'); \nexports.handleRequest = function(req, res, options, relativePath, query) { \n\t\n    if(options.logHeadRequests) {\n\t\tconsole.log('head: ' + relativePath);\t\t\t\t\n\t}\n    \n\tfs.stat(relativePath, function(err, stats) { // determine if the resource is a file or directory\n\t\tif(err) { error.write(res, err); } \n\t\telse {\t\t\t\t\t\n\t\t\tres.setHeader('Last-Modified', stats.mtime);\t\t\n\t\t\tif(stats.isDirectory()) {\t\t\t\t\t\t\t\t\n\t\t\t\tres.setHeader('Content-Type', query.type == 'json' || query.dir == 'json' ? 'application/json' : 'text/html');\n\t\t\t} else {\n\t\t\t\tif(query.type == 'json' || query.dir == 'json') {\n\t\t\t\t\tres.setHeader('Content-Type', 'application/json');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar type = mime.lookup(relativePath);\n\t\t\t\t\tres.setHeader('Content-Type', type);\n\t\t\t\t\tres.setHeader('Content-Length', stats.size);\n\t\t\t\t}\n\t\t\t}\n\t\t\tres.end();\t\t\t\t\t\t\t\n\t\t}\n\t});\n};"]],"start1":0,"start2":0,"length1":0,"length2":921}]],"length":921}
