{"ts":1347314436576,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"#!/usr/bin/env node\r\n\r\nvar argv = require('optimist').argv;\r\nvar server = require('../crud-file-server');\r\n\r\nif(!argv.q) {\r\n\tconsole.log('usage:');\t\r\n\tconsole.log('  crud-file-server [options]');\r\n\tconsole.log('');\r\n\tconsole.log('this starts a file server using the specified command-line options');\r\n\tconsole.log('');\r\n\tconsole.log('options:');\r\n\tconsole.log('');\r\n\tconsole.log('  -f file system path to expose over http');\r\n\tconsole.log('  -h log head requests');\t\r\n\tconsole.log('  -m vpath to use the mount the faye server (omit to disable publication)');\r\n\tconsole.log('  -p port to listen on (example, 80)');\r\n\tconsole.log('  -q suppress this message');\r\n\tconsole.log('  -r read only');\r\n\tconsole.log('  -v virtual path to host the file server on');\r\n\tconsole.log('');\r\n\tconsole.log('example:');\r\n\tconsole.log('');\r\n\tconsole.log('  crud-file-server -f c:/ -p 8080 -q -m /faye -v filez');\r\n\tconsole.log('');\r\n}\r\n\r\nvar port  = argv.p || 80;\r\nvar path  = argv.f || process.cwd();\r\nvar vpath = (argv.v || '').trimLeft();\r\nvar readOnly = argv.v;\r\nvar logHeadRequests = argv.h;\r\nvar publish = function() {};\r\nif(argv.m) {\r\n\tvar faye = require('faye');\r\n\tvar server = new faye.NodeAdapter({mount: argv.m});\r\n\tconsole.log('faye server listening on ' + argv.p);\r\n\tserver.listen(argv.p);\r\n\tpublish = function(message) { \r\n\t\tserver.publish('/', message);\r\n\t};\r\n}\r\n\r\nrequire('http').createServer(function (req, res) {\r\n\tserver.handleRequest(vpath, path, req, res, publish, readOnly, logHeadRequests);\r\n}).listen(port);\r\n\r\nconsole.log('listening on :' + port + '/' + vpath + ', serving ' + path);\r\n"]],"start1":0,"start2":0,"length1":0,"length2":1590}]],"length":1590}
{"contributors":[],"silentsave":false,"ts":1347314458854,"patch":[[{"diffs":[[0,";\t\r\n"],[-1,"\tconsole.log('  -m vpath to use the mount the faye server (omit to disable publication)');\r\n"],[0,"\tcon"]],"start1":464,"start2":464,"length1":100,"length2":8},{"diffs":[[0,".h;\r"],[-1,"\nvar publish = function() {};\r\nif(argv.m) {\r\n\tvar faye = require('faye');\r\n\tvar server = new faye.NodeAdapter({mount: argv.m});\r\n\tconsole.log('faye server listening on ' + argv.p);\r\n\tserver.listen(argv.p);\r\n\tpublish = function(message) { \r\n\t\tserver.publish('/', message);\r\n\t};\r\n}\r"],[0,"\n\r\nr"]],"start1":981,"start2":981,"length1":288,"length2":8}]],"length":1218,"saved":false}
{"ts":1347314467279,"patch":[[{"diffs":[[0," -q "],[-1,"-m /faye "],[0,"-v f"]],"start1":776,"start2":776,"length1":17,"length2":8}]],"length":1209,"saved":false}
